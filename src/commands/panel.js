// src/commands/panel.js
const { ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const { makePromptEmbed } = require('../utils/embeds');

function makeRootPanel() {
    return [
        new ActionRowBuilder().addComponents(
            new ButtonBuilder().setCustomId('panel|week').setLabel('üìÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ').setStyle(ButtonStyle.Primary),
            new ButtonBuilder().setCustomId('panel|manage').setLabel('üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ').setStyle(ButtonStyle.Secondary),
        ),
        new ActionRowBuilder().addComponents(
            new ButtonBuilder().setCustomId('panel|history').setLabel('üßæ –ò—Å—Ç–æ—Ä–∏—è').setStyle(ButtonStyle.Secondary),
            new ButtonBuilder().setCustomId('panel|leave').setLabel('üèñ –û—Ç–ø—É—Å–∫/–û—Ç–≥—É–ª').setStyle(ButtonStyle.Success),
        ),
        new ActionRowBuilder().addComponents(
            new ButtonBuilder().setCustomId('panel|config').setLabel('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è').setStyle(ButtonStyle.Secondary),
        ),
    ];
}

async function panelCommand(interaction) {
    return interaction.reply({
        embeds: [makePromptEmbed('–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')],
        components: makeRootPanel(),
        flags: 64, // ephemeral
    });
}

module.exports = { panelCommand };
