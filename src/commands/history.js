const { SlashCommandBuilder } = require('discord.js');
const { purgeHistory } = require('../services/historyStore');

async function historyCommand(interaction) {
    const history = purgeHistory();
    const last = history.slice(-30);
    if (!last.length) return interaction.reply({ content: '–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü.' });
    const lines = last.map(ev => {
        const when = new Date(ev.ts).toLocaleString('ru-RU');
        switch (ev.action) {
            case 'register':   return `üü¢ [${when}] <@${ev.targetId}> –∑–∞–ø–∏—Å–∞–ª—Å—è: ${ev.day}, —á–∞—Å—Ç—å ${ev.part}, —Ä–æ–ª—å ${ev.role}`;
            case 'unregister': return `‚ö™ [${when}] <@${ev.targetId}> –æ—Ç–ø–∏—Å–∞–ª—Å—è: ${ev.day}, —á–∞—Å—Ç—å ${ev.part}, —Ä–æ–ª—å ${ev.role}`;
            case 'remove':     return `üóë [${when}] <@${ev.actorId}> —É–¥–∞–ª–∏–ª <@${ev.targetId}>: ${ev.day}, —á–∞—Å—Ç—å ${ev.part}, —Ä–æ–ª—å ${ev.role}`;
            case 'move':       return `üì¶ [${when}] <@${ev.actorId}> –ø–µ—Ä–µ–Ω—ë—Å <@${ev.targetId}>: ${ev.fromDay} —á.${ev.fromPart}/${ev.fromRole} ‚Üí ${ev.toDay} —á.${ev.toPart}/${ev.toRole}`;
            default:           return `‚ÑπÔ∏è [${when}] ${JSON.stringify(ev)}`;
        }
    });
    return interaction.reply({ content: lines.join('\n').slice(0, 1900) });
}

module.exports = { historySlash: new SlashCommandBuilder().setName('history').setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é (30 –¥–Ω–µ–π)').toJSON(), historyCommand };
